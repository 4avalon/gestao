const pedidosContainer = document.getElementById("pedidos-container");
const tabelaContainer = document.getElementById("tabela-container");
const detalhesContainer = document.getElementById("detalhes-container");
const estatisticasContainer = document.getElementById("estatisticas-container");

// üî• Fun√ß√£o para carregar m√≥dulos dinamicamente
async function carregarModulo(container, htmlPath, cssPath, scriptPath, nome, callback) {
    console.log(`üìÇ Carregando m√≥dulo: ${nome}`);

    try {
        // üî• Carrega o HTML do m√≥dulo
        const response = await fetch(htmlPath);
        if (!response.ok) throw new Error(`M√≥dulo ${nome} n√£o encontrado!`);

        const moduloHtml = await response.text();
        container.innerHTML = moduloHtml;
        console.log(`‚úÖ HTML do m√≥dulo ${nome} carregado!`);

        // üî• Carrega o CSS do m√≥dulo (se ainda n√£o estiver carregado)
        if (!document.querySelector(`link[href='${cssPath}']`)) {
            const css = document.createElement("link");
            css.rel = "stylesheet";
            css.href = cssPath;
            document.head.appendChild(css);
            console.log(`üé® CSS do m√≥dulo ${nome} carregado!`);
        }

        // üî• Remove qualquer script antigo do mesmo m√≥dulo (para evitar duplica√ß√£o)
        const existingScript = document.querySelector(`script[src='${scriptPath}']`);
        if (existingScript) {
            existingScript.remove();
            console.log(`üóë Script antigo do m√≥dulo ${nome} removido.`);
        }

        // üî• Carrega o JS do m√≥dulo DINAMICAMENTE e executa o callback ap√≥s o carregamento
        const script = document.createElement("script");
        script.src = scriptPath;
        script.type = "module";  // ‚úÖ Adicionando suporte a m√≥dulos
        script.defer = true;

        script.onload = () => {
            console.log(`‚úÖ JS do m√≥dulo ${nome} carregado!`);
            if (typeof callback === "function") {
                console.log(`üöÄ Executando callback para ${nome}...`);
                callback();
            }
        };

        script.onerror = () => console.error(`‚ùå Erro ao carregar ${scriptPath}!`);

        document.body.appendChild(script);

    } catch (error) {
        console.error(`‚ùå Erro ao carregar ${nome}:`, error);
        container.innerHTML = `<p style="color: red;">Erro ao carregar ${nome}.</p>`;
    }
}

// üî• Carregando m√≥dulos dinamicamente

// üî• Primeiro, carregamos os filtros da tabela
const isPainel = window.location.href.includes("painel");

const caminhoFiltros = isPainel
    ? "dashboard/admin/modules/tabela_admin_filtros.js" // Caminho no painel
    : "modules/tabela_admin_filtros.js"; // Caminho normal fora do painel

carregarModulo(
    tabelaContainer, 
    "dashboard/admin/modules/tabela_admin.html", 
    "dashboard/admin/modules/tabela_admin.css", 
    caminhoFiltros, // Agora usa o caminho correto dependendo do contexto
    "tabela_admin_filtros",
    () => {
        console.log("üöÄ Filtros da tabela carregados!");
        
        carregarModulo(
            tabelaContainer, 
            "dashboard/admin/modules/tabela_admin.html", 
            "dashboard/admin/modules/tabela_admin.css", 
            "dashboard/admin/modules/tabela_admin.js", 
            "tabela_admin",
            () => {
                console.log("üöÄ Inicializando funcionalidades da tabela...");

            }
        );
    }
);


// üî• Carregando Detalhes
carregarModulo(
    detalhesContainer, 
    "dashboard/admin/modules/detalhes_admin.html", 
    "dashboard/admin/modules/detalhes_admin.css", 
    "dashboard/admin/modules/detalhes_admin.js", 
    "detalhes_admin",
    () => {
        console.log("üöÄ Inicializando funcionalidades de detalhes...");
        
        if (typeof carregarDentistasParaSelecao === "function") {
            carregarDentistasParaSelecao();
        } else {
            console.error("‚ùå Fun√ß√£o carregarDentistasParaSelecao n√£o encontrada!");
        }

        const botaoCarregar = document.getElementById("carregar-detalhes");
        if (botaoCarregar) {
            botaoCarregar.addEventListener("click", () => {
                if (typeof carregarDetalhesDentista === "function") {
                    carregarDetalhesDentista();
                } else {
                    console.error("‚ùå Fun√ß√£o carregarDetalhesDentista n√£o encontrada!");
                }
            });
            console.log("‚úÖ Evento de clique vinculado ao bot√£o 'Carregar Detalhes'");
        } else {
            console.error("‚ùå Bot√£o 'Carregar Detalhes' n√£o encontrado!");
        }
    }
);